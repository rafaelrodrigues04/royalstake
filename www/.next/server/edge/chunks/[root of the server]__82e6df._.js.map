{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.jsx"],"sourcesContent":["import { NextResponse, NextRequest } from \"next/server\"\r\n\r\nconst publicRoutes = [\r\n    { path: '/', whenAuthenticated: 'next' },\r\n    { path: '/login', whenAuthenticated: 'redirect' },\r\n    { path: '/signup', whenAuthenticated: 'redirect' },\r\n    { path: '/roulette', whenAuthenticated: 'next' },\r\n]\r\n\r\nconst REDIRECT_WHEN_NOT_AUTHENTICATED_ROUTE = '/login'\r\n\r\nexport function middleware(request) {\r\n\r\n    const path = request.nextUrl.pathname\r\n    const publicRoute = publicRoutes.find(route => route.path == path)\r\n    const authToken = request.cookies.get('accessToken')\r\n\r\n    if (!authToken && publicRoute) {\r\n        return NextResponse.next()\r\n    }\r\n\r\n    if (!authToken && !publicRoute) {\r\n        const redirectUrl = request.nextUrl.clone()\r\n\r\n        redirectUrl.pathname = REDIRECT_WHEN_NOT_AUTHENTICATED_ROUTE\r\n\r\n        return NextResponse.redirect(redirectUrl)\r\n    }\r\n\r\n    if (authToken && publicRoute && publicRoute.whenAuthenticated == 'redirect') {\r\n        const redirectUrl = request.nextUrl.clone()\r\n\r\n        redirectUrl.pathname = '/roulette'\r\n\r\n        return NextResponse.redirect(redirectUrl)\r\n    }\r\n\r\n    if (authToken && !publicRoute) {\r\n        return NextResponse.next();\r\n    }\r\n}\r\n\r\nexport const config = {\r\n    matcher: [\r\n      /*\r\n       * Match all request paths except for the ones starting with:\r\n       * - api (API routes)\r\n       * - _next/static (static files)\r\n       * - _next/image (image optimization files)\r\n       * - favicon.ico, sitemap.xml, robots.txt (metadata files)\r\n       */\r\n      '/((?!api|_next/static|_next/image|images|favicon.ico|sitemap.xml|robots.txt).*)',\r\n    ],\r\n}"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,MAAM,eAAe;IACjB;QAAE,MAAM;QAAK,mBAAmB;IAAO;IACvC;QAAE,MAAM;QAAU,mBAAmB;IAAW;IAChD;QAAE,MAAM;QAAW,mBAAmB;IAAW;IACjD;QAAE,MAAM;QAAa,mBAAmB;IAAO;CAClD;AAED,MAAM,wCAAwC;AAEvC,SAAS,WAAW,OAAO;IAE9B,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IACrC,MAAM,cAAc,aAAa,IAAI,CAAC,CAAA,QAAS,MAAM,IAAI,IAAI;IAC7D,MAAM,YAAY,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEtC,IAAI,CAAC,aAAa,aAAa;QAC3B,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC5B;IAEA,IAAI,CAAC,aAAa,CAAC,aAAa;QAC5B,MAAM,cAAc,QAAQ,OAAO,CAAC,KAAK;QAEzC,YAAY,QAAQ,GAAG;QAEvB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IACjC;IAEA,IAAI,aAAa,eAAe,YAAY,iBAAiB,IAAI,YAAY;QACzE,MAAM,cAAc,QAAQ,OAAO,CAAC,KAAK;QAEzC,YAAY,QAAQ,GAAG;QAEvB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IACjC;IAEA,IAAI,aAAa,CAAC,aAAa;QAC3B,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC5B;AACJ;AAEO,MAAM,SAAS;IAClB,SAAS;QACP;;;;;;OAMC,GACD;KACD;AACL"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}